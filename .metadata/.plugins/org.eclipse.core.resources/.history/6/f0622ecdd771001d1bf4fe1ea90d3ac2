import java.time.DayOfWeek;
import java.util.Scanner;
import java.util.Map;
import java.time.*;

public class Student {
	int studID;
	private String name;
	private String email;
	private String mobile;
	
	
	
	Student (String name, int studID, String email, String mobile ){
		this.name = name;
		this.email = email;
		this.mobile = mobile;
		this.studID = studID;
		
		AppData.studs.put(studID, this);
	}
	
	void takeAppointment (long timestamp, int docID, String day, String time){
		//Doctor doc = Doctor.docs.get(docID);
		DayOfWeek d=null;
		switch(day){
			case "M":
				d=DayOfWeek.MONDAY;
				break;
			case "T":
				d=DayOfWeek.TUESDAY;
				break;
			case "W":
				d=DayOfWeek.WEDNESDAY;
				break;
			case "Th":
				d=DayOfWeek.THURSDAY;
				break;
			case "F":
				d=DayOfWeek.FRIDAY;
				break;
			case "Sa":
				d=DayOfWeek.SATURDAY;
				break;
			case "Su":
				d=DayOfWeek.SUNDAY;
				break;
		}
		
		String[] t = time.split(":");
		int hour = Integer.parseInt(t[0]);
		int min = Integer.parseInt(t[1]);
		
		Doctor doc = AppData.docs.get(docID);
		
		synchronized(doc.getAppts(d)) {
		Appointment appt = new Appointment(timestamp,this,doc,d,hour,min);
		}
		
		
	}
	
	public void checkNoticeBoard() {
		for (Notice notice: AppData.notices) {
			notice.show();
		}
	}
	
	public void purchaseMeds(int medID, int quant, String p_mode) {
//		Medicine m = null;
//		for(Medicine med: AppData.inventory) {
//			if (med.getID() == medID) {
//				m = med;
//				break;
//			}
//		}
		if(AppData.inventory.get(medID)==null) {
			System.out.println("Medicine not available");
		}
		else if(AppData.inventory.get(medID).getQuantity()>quant) {
			System.out.println("Quantity unservicable");
		}
		else {
			Medicine med = AppData.inventory.get(medID);
			int price = med.getPrice()*quant;
			med.setQuantity(med.getQuantity()-quant);
			
			System.out.println(med.getName() + " bought succesfully");
			switch(p_mode) {
			case "Cash":
				System.out.println("Paid in Cash");
				break;
			case "Later":
				AppData.dues.replace(this, AppData.dues.get(this)-price) ;
				System.out.println("Purchase added to dues");
				break;
			}
			
		}
//		if (m == null) System.out.println("Medicine unavailable");
//		else {
//			if (quant<= m.getQuantity()) {
//				int bill = quant* m.getPrice();
//				m.setQuantity(m.getQuantity() - quant);
//				System.out.println("bill:" + bill + '\n' + "How would you like to pay?");
//				String s = in.nextLine();
//				if(s.compareToIgnoreCase("Pay Now") == 0)  
//					System.out.println("Transaction successful!");
//				if(s.compareToIgnoreCase("Pay Later") == 0) {
//					appData.dues.computeIfPresent(this,(k,v) -> v + bill);
//					if (appData.dues.get(this)!= null) appData.dues.put(this,bill);
//					System.out.println("Added to your dues");
//				}
//			}
//		}
		
	}

	public void checkDues() {
		System.out.println("Your current dues: " +AppData.dues.get(this));
	}
		
		
}
	
	
	
